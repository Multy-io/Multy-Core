language: cpp

env:
  - BUILD_TYPE=Debug
  - BUILD_TYPE=Release

os:
  - osx

matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - BUILD_TYPE=Debug
        - DISTRIBUTION_VARIANT=linux_gcc5_debug

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - BUILD_TYPE=Release
        - DISTRIBUTION_VARIANT=linux_gcc5_release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=Debug
        - DISTRIBUTION_VARIANT=linux_clang_debug

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=Release
        - DISTRIBUTION_VARIANT=linux_clang_release

    - language: android
      jdk: oraclejdk8
      os: linux

      env:
        global:
          - ANDROID=true
          - ANDROID_API_LEVEL=21
          - EMULATOR_API_LEVEL=21
          - ANDROID_BUILD_TOOLS=26.1.1
          - ADB_INSTALL_TIMEOUT=5 # minutes
          - DISTRIBUTION_VARIANT=android_release

      android:
        components:
          - tools
          - platform-tools
          - tools
          - build-tools-${ANDROID_BUILD_TOOLS}
          - android-${ANDROID_API_LEVEL}
          - extra # ???
          - add-on # ???
      #    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL

      install:
        # Accept SDK Licenses + Install NDK
        - yes | sdkmanager --update > /dev/null
        - sdkmanager ndk-bundle > /dev/null
          # Install the system image.
        # [DISABLED] Setting up AVD and starting an emulator
        # - sdkmanager "system-images;android-24;default;armeabi-v7a" > /dev/null
        # # Create and start emulator for the script. Meant to race the install task.
        # - android list target
        # - avdmanager list avd
        # - echo no | avdmanager create avd --force -n test_AVD -k "system-images;android-24;default;armeabi-v7a"
        # - android list target
        # - avdmanager list avd
        # - $ANDROID_HOME/emulator/emulator -avd test_AVD -no-audio -no-window &

      script:
        - set -e
        - cd ./samples/android_run_tests/
        - ./gradlew assembleRelease
      # [DISABLED] installing apk on emulator
      #  - android-wait-for-emulator
      #  - adb shell input keyevent 82 &
      #  - adb devices
      #  - ./gradlew installRelease --stacktrace --debug

    - language: objective-c
      os: osx

      script:
        - export BUILD_DIR=$(pwd)/build-iOS
        - mkdir ${BUILD_DIR} && pushd ${BUILD_DIR}

        # Prepare && build
        - cmake ..  -G'Unix Makefiles' -DCCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../tools/ios-cmake/ios.toolchain.cmake -DIOS_PLATFORM=OS -DIOS_DEPLOYMENT_TARGET=9.0 -DCMAKE_OSX_ARCHITECTURES=arm64 -DMULTY_WITH_TESTS=1 -DMULTY_WITH_ALL_BLOCKCHAINS=ON
        - cmake --build .

        # Copy build artifacts to the sample app
        - find . -iname '*.dylib' -or -iname '*.a' -not -path '*google*' -exec cp {} ../samples/iOS_run_tests/Libraries/ \;

        # Copy headers to the sample app
        - cp ../multy_core/*.h ../samples/iOS_run_tests/Headers

        # Update Headers: Rename Error to MultyError due to name clash.
        - sed -i '' -E 's/Error/MultyError/g' ../samples/iOS_run_tests/Headers/error.h
      env:
        - DISTRIBUTION_VARIANT=osx_release

        # Build the sample app with updated libs and headers
        #  - xcodebuild -list -project ../samples/iOS_run_tests/iOS_run_tests.xcodeproj
        #  - xcodebuild build -configuration Debug -project ../samples/iOS_run_tests/iOS_run_tests.xcodeproj #CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

before_script:
    - eval "${MATRIX_EVAL}"

script:
  - mkdir build && cd build
  # TODO: split in multiple lines
  - cmake .. -G'Unix Makefiles' -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DMULTY_MORE_WARNINGS=ON -DMULTY_TEST_DISABLE_DEATH_TESTS=ON -DMULTY_WARNINGS_AS_ERRORS=ON -DMULTY_WITH_TESTS=ON -DMULTY_WITH_TEST_APP=ON -DMULTY_WITH_ALL_BLOCKCHAINS=ON
  - cmake --build . --target all
  - ./multy

before_deploy:
  - echo 'ABOUT TO DEPLOY!!!! WOOOHOOO!!!' && pwd
  - export DISTRIBUTION_VARIANT=${DISTRIBUTION_VARIANT:+${TRAVIS_OS_NAME}_${BUILD_TYPE}}
  - export DISTRIBUTION_VERSION=${TRAVIS_TAG:+${TRAVIS_COMMIT}}
  - export DISTRIBUTION_NAME=distribution_${DISTRIBUTION_VARIANT}_${DISTRIBUTION_VERSION}.zip
  - mkdir -p ./distribution ./distribution/bin ./distribution/include
  - find . \( -iname '*.a' -o -iname '*.so' -o -iname '*.dlyb' \) -a \( -iname '*multy_core*' -o -iname '*ccan*' -o -iname '*keccak*' -o -iname '*mini-gmp*' -o -iname '*jsoncpp*' -not -name '*.o' \) -not -path '*google*' -type f -exec cp {} ./distribution/bin \;
  - cp ../multy_core/*.h ./distribution/include
  - cp ../LICENSE ./distribution
  - "printf \"Branch: $(git rev-parse --abbrev-ref HEAD)\nCommit: $(git log -1 --format=%h)\nTag: $(git describe --tags --abbrev=0 --dirty --candidates=0)\" > ./distribution/VERSION"
  - tar czf ${DISTRIBUTION_NAME} ./distribution
  - pwd && echo ${DISTRIBUTION_NAME}
  - tar -tf ${DISTRIBUTION_NAME}

deploy:
  provider: releases
  skip_cleanup: true
  draft: true
  overwrite: true
  # do as Enmk
  api_key:
    secure: "m+k5PRHSEVHLiMHpguI2zGCm4UvtzDHxWanu/UBXQdufRdJOr49e+ySsNkvALs3SZIgaGEnx8Gd0eGlKvRkjpaDpxbwZ2+VlB2ryNRdqVOJ4clhLrJcOMYysKrbBrAY3xtwLr1yIiQ8PAREUDr0pPN4hDHVyXlZC8ygFdFrETpeYBdMiZFzfMLOXcWHe4NvN3omYNHjEu19ar8mZ87covpg7XAdVj0bPfBifIrMpoqELwP5Xi10SB+ahbXJFs56+xArG8JgQ86q/gXTgd7qycxqmUBbMfGJW+6A+umqhoa5tOxBabKjOAwkJiYauYb6CxqfqI89f6QD+qVvcUYG5Eybc1vy42P2tr0YDM/T58nzOeMHZ0ARFHwCRBm/OvY/h+BDJqTZ8nJ+hNNW1OvS2+Tf2ljdN/TLR1Pd2RY3hWEHc+huMON3FV2ZqlKlFIfDRP/k+yUjPf5e7sEwkkbfFnPSz5gUu66cHvzi7HB9XfkxqC0ty4OTIy8+N7xsD0EERnFOg38xXTrdPnV9x33rFZdE3zukUDSxxwfGjCcFiAkAnxAmXQwm3cx7QCOP0lyrpITKg9W3iz7V4flFDFaoAfLOSpE/4H1IAEj2KGTFILovXTkJejXopC/3p8eW2ud9VQfxMEP6m1mq5byypqP+/yazz56P3QRKOPbYZDLQ/53I="
  file: "${DISTRIBUTION_NAME}"
  on:
#    tags: true
#    repo: Multy-io/Multy-back
    all_branches: true
#    condition: $TRAVIS_BRANCH =~ ^v\d+.\d+$
